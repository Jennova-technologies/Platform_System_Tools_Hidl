/*
 * Copyright (C) 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

genrule {
    name: "hidl2aidl_test_gen_aidl",
    tools: ["hidl2aidl"],
    cmd: "$(location hidl2aidl) -o $(genDir)/ " +
        "-rhidl2aidl:system/tools/hidl/hidl2aidl/test " +
        "hidl2aidl@1.0 hidl2aidl@2.0",
    required: ["android.hidl.base@1.0"],
    srcs: [
        "1.0/IBar.hal",
        "1.0/IFoo.hal",
        "1.0/types.hal",
        "1.1/IFoo.hal",
        "1.1/types.hal",
        "2.0/IFoo.hal",
    ],
    out: [
        "hidl2aidl/IBar.aidl",
        "hidl2aidl/IBarInner.aidl",
        "hidl2aidl/IFoo.aidl",
        "hidl2aidl/IFooBigStruct.aidl",
        "hidl2aidl/OnlyIn10.aidl",
        "hidl2aidl/OnlyIn11.aidl",
        "hidl2aidl/Outer.aidl",
        "hidl2aidl/OuterInner.aidl",
        "hidl2aidl/OverrideMe.aidl",
        "hidl2aidl/Value.aidl",
        // "hidl2aidl/conversion.log",
        "hidl2aidl2/IFoo.aidl",
    ],
}

genrule {
    name: "hidl2aidl_test_gen_java",
    tools: ["aidl"],
    cmd: "$(location aidl) --lang=java -o $(genDir) $(in)",
    srcs: [":hidl2aidl_test_gen_aidl"],
    out: [
        "hidl2aidl/IBar.java",
        "hidl2aidl/IBarInner.java",
        "hidl2aidl/IFoo.java",
        "hidl2aidl/IFooBigStruct.java",
        "hidl2aidl/OnlyIn10.java",
        "hidl2aidl/OnlyIn11.java",
        "hidl2aidl/Outer.java",
        "hidl2aidl/OuterInner.java",
        "hidl2aidl/OverrideMe.java",
        "hidl2aidl/Value.java",
        "hidl2aidl2/IFoo.java",
    ],
}

genrule {
    name: "hidl2aidl_test_gen_cpp_srcs",
    tools: ["aidl"],
    cmd: "$(location aidl) --lang=cpp -o $(genDir) --header_out=$(genDir) $(in)",
    srcs: [":hidl2aidl_test_gen_aidl"],
    out: [
        "hidl2aidl/IBar.cpp",
        "hidl2aidl/IBarInner.cpp",
        "hidl2aidl/IFoo.cpp",
        "hidl2aidl/IFooBigStruct.cpp",
        "hidl2aidl/OnlyIn10.cpp",
        "hidl2aidl/OnlyIn11.cpp",
        "hidl2aidl/Outer.cpp",
        "hidl2aidl/OuterInner.cpp",
        "hidl2aidl/OverrideMe.cpp",
        "hidl2aidl2/IFoo.cpp",
    ],
}

genrule {
    name: "hidl2aidl_test_gen_cpp_headers",
    tools: ["aidl"],
    cmd: "$(location aidl) --lang=cpp -o $(genDir) --header_out=$(genDir) $(in)",
    srcs: [":hidl2aidl_test_gen_aidl"],
    out: [
        "hidl2aidl/BnBar.h",
        "hidl2aidl/BnBarInner.h",
        "hidl2aidl/BnFoo.h",
        "hidl2aidl/BnFooBigStruct.h",
        "hidl2aidl/BnOnlyIn10.h",
        "hidl2aidl/BnOnlyIn11.h",
        "hidl2aidl/BnOuter.h",
        "hidl2aidl/BnOuterInner.h",
        "hidl2aidl/BnOverrideMe.h",
        "hidl2aidl/BpBar.h",
        "hidl2aidl/BpBarInner.h",
        "hidl2aidl/BpFoo.h",
        "hidl2aidl/BpFooBigStruct.h",
        "hidl2aidl/BpOnlyIn10.h",
        "hidl2aidl/BpOnlyIn11.h",
        "hidl2aidl/BpOuter.h",
        "hidl2aidl/BpOuterInner.h",
        "hidl2aidl/BpOverrideMe.h",
        "hidl2aidl/IBar.h",
        "hidl2aidl/IBarInner.h",
        "hidl2aidl/IFoo.h",
        "hidl2aidl/IFooBigStruct.h",
        "hidl2aidl/OnlyIn10.h",
        "hidl2aidl/OnlyIn11.h",
        "hidl2aidl/Outer.h",
        "hidl2aidl/OuterInner.h",
        "hidl2aidl/OverrideMe.h",
        "hidl2aidl/Value.h",
        "hidl2aidl2/BnFoo.h",
        "hidl2aidl2/BpFoo.h",
        "hidl2aidl2/IFoo.h",
    ],
}

java_library {
    name: "hidl2aidl_test_comp_java",
    srcs: [":hidl2aidl_test_gen_java"],
}

cc_test_library {
    name: "hidl2aidl_test_comp_cc",
    generated_sources: ["hidl2aidl_test_gen_cpp_srcs"],
    generated_headers: ["hidl2aidl_test_gen_cpp_headers"],
    export_generated_headers: ["hidl2aidl_test_gen_cpp_headers"],
    srcs: ["cpp_test_compile.cpp"],
    shared_libs: [
        "libbinder",
        "libutils",
    ],
    gtest: false,
}

phony {
    name: "hidl2aidl_test",
    required: [
        "hidl2aidl_test_comp_cc",
        "hidl2aidl_test_comp_java",
    ],
}
